{"version":3,"sources":["login-avatar.png","Header.js","Home.js","Auth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","cookie","remove","path","window","location","reload","id","onClick","this","logout","React","Component","Home","onChange","e","setState","target","name","value","rateForm","a","preventDefault","axios","post","state","rating","feedback","res","data","error","alert","success","message","rateGame","i","substring","game","save","gamecookie","load","games","JSON","parse","username","length","get","then","catch","map","item","key","avgFB","onSubmit","type","backToGames","formName","feedbackID","dashboard","Auth","mySubmitForm","method","className","src","avatar","alt","placeholder","App","myroute","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,0C,gOCsB5BC,E,YAjBb,WAAYC,GAAQ,qEACZA,I,sEAGNC,IAAOC,OAAO,OAAQ,CAAEC,KAAM,MAC9BF,IAAOC,OAAO,OAAQ,CAAEC,KAAM,MAE9BC,OAAOC,SAASC,W,+BAGhB,OACC,yBAAKC,GAAG,UAAS,yCAAkB,4BAAQA,GAAG,eAAeC,QAASC,KAAKC,QAAxC,e,GAZnBC,IAAMC,W,gBCgIZC,G,kBA5Hb,WAAYb,GAAQ,IAAD,uBACjB,4CAAMA,KAMPc,SAAW,SAACC,GACX,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SARzB,EAWnBC,SAXmB,uCAWR,WAAOL,GAAP,eAAAM,EAAA,6DACRN,EAAEO,iBADM,kBAISC,IAAMC,KAAK,QAAS,CAAC,OAAU,EAAKC,MAAMC,OAAQ,SAAY,EAAKD,MAAME,WAJlF,YAIHC,EAJG,QAKCC,KAAKC,MALN,yCAMEC,MAAMH,EAAIC,KAAKC,QANjB,OAQPC,MAAMH,EAAIC,KAAKG,SACf/B,IAAOC,OAAO,SAAU,CAAEC,KAAM,MAChCC,OAAOC,SAASC,SAVT,kDAYPyB,MAAM,0BAA0B,KAAEE,SAZ3B,0DAXQ,wDA2BlBC,SAAW,SAACnB,GACXA,EAAEO,iBAEF,IACG,IAAIa,EAAKpB,EAAEE,OAAOC,KAAKkB,UAAU,GAC7BC,EAAO,EAAKZ,MAAMI,KAAKM,GAC3BlC,IAAOqC,KAAK,SAAWD,EAAM,CAAElC,KAAM,MACrCC,OAAOC,SAASC,SAClB,MAAOS,GACPgB,MAAM,0BAA0BhB,EAAEkB,WAlCnC,IAAIM,EAAatC,IAAOuC,KAAK,SAAU,CAAErC,KAAM,MAF9B,OAGjBoC,EAAaA,GAAuB,CAAC,KAAO,GAAI,GAAK,IACrD,EAAKd,MAAQ,CAACE,SAAS,GAAID,OAAQ,GAAIG,KAAK,GAAIQ,KAAKE,EAAYE,MAAM,IAJtD,E,2EAyCjBxC,IAAOC,OAAO,SAAU,CAAEC,KAAM,MAChCC,OAAOC,SAASC,W,kCAGN,IAAD,OAGP,MAA2B,SAFToC,KAAKC,MAAM1C,IAAOuC,KAAK,QAAQJ,UAAU,IAE5CQ,UACkB,GAA3BnC,KAAKgB,MAAMgB,MAAMI,QACrBtB,IAAMuB,IAAI,WAAY,IACrBC,MAAK,SAAAnB,GAAG,OAAI,EAAKZ,SAAS,CAAEyB,MAAOb,EAAIC,UACtCmB,QACK,yBAAKzC,GAAG,kBAAiB,kEAC9B,+BACE,+BAAO,4BAAI,uCAAgB,yCAAkB,wCAC7C,+BACDE,KAAKgB,MAAMgB,MAAMQ,KAAI,SAACC,EAAMf,GAC3B,OACE,wBAAIgB,IAAKhB,GACP,4BAAKe,EAAK3C,IAAQ,4BAAK2C,EAAKhC,MAAU,4BAAKgC,EAAKE,eASrDnD,IAAOuC,KAAK,UAyBd,yBAAKjC,GAAG,eACN,oCAAUE,KAAKgB,MAAMY,KAAKnB,MAC1B,0BAAMmC,SAAY5C,KAAKW,SAAUb,GAAG,cAClC,yCACG,4BAAQW,KAAK,SAASJ,SAAYL,KAAKK,UACrC,4BAAQK,MAAM,IAAd,iBACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MACO,6BACT,2CACA,2BAAOmC,KAAK,OAAQxC,SAAYL,KAAKK,SAAUI,KAAK,WAAWX,GAAG,kBACpE,8CAEH,6BACA,4BAAQC,QAASC,KAAK8C,aAAa,mDAzCR,GAA1B9C,KAAKgB,MAAMI,KAAKgB,QACpBtB,IAAMuB,IAAI,SAAU,IACnBC,MAAK,SAAAnB,GAAG,OAAI,EAAKZ,SAAS,CAAEa,KAAMD,EAAIC,UACrCmB,QACK,yBAAKzC,GAAG,kBAAiB,qDAC9B,4BACCE,KAAKgB,MAAMI,KAAKoB,KAAI,SAACC,EAAMf,GAC1B,IAAIqB,EAAW,IAAIrB,EACnB,OAAKe,EAAKO,WAUF,wBAAIN,IAAKhB,GAAT,cAAuB,2BAAIe,EAAKhC,MAAhC,eAAsDgC,EAAKxB,QARjE,wBAAIyB,IAAKhB,GACT,0BAAMkB,SAAU,EAAKnB,SAAUhB,KAAMsC,GACnC,2BAAOF,KAAK,SAASnC,MAAO+B,EAAK3C,GAAIW,KAAK,WAC1C,wCAAegC,EAAKhC,gB,+BAiChC,OAAQ,6BACI,kBAAC,EAAD,MACCT,KAAKiD,iB,GAvHH/C,IAAMC,Y,iBC+CV+C,E,YA9Cb,WAAY3D,GAAQ,IAAD,8BACjB,4CAAMA,KAHRyB,MAAQ,CAAC,QAAU,IAEA,EAInBmC,aAJmB,uCAIH,WAAO7C,GAAP,SAAAM,EAAA,6DACdN,EAAEO,iBADY,kBAIIC,IAAMC,KAAK,SAAU,EAAKC,OAJ9B,iBAMJI,KAAKe,SAND,uBAOV,EAAK5B,SAAS,CAACiB,QAAS,wCAPd,mBAQH,GARG,OAUZ7B,OAAOC,SAASC,SAVJ,kDAaZyB,MAAM,0BAA0B,KAAEE,SAbtB,0DAJG,wDAsBrBnB,SAAW,SAACC,GACR,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAvBzB,E,sEA2BnB,OACE,yBAAKZ,GAAG,mBACN,yBAAKA,GAAG,aAAaE,KAAKgB,MAAMQ,SAChC,+CACD,0BAAM4B,OAAO,OAAOR,SAAU5C,KAAKmD,aAAcrD,GAAG,cACpD,yBAAKuD,UAAU,oBACZ,yBAAKC,IAAKC,IAAQC,IAAI,SAASH,UAAU,YAE5C,2CACA,2BAAOR,KAAK,OAAOpC,KAAK,WAAWJ,SAAYL,KAAKK,SAAUoD,YAAY,wBAC1E,2CACA,2BAAOZ,KAAK,WAAWpC,KAAK,WAAWJ,SAAYL,KAAKK,SAAUoD,YAAY,wBAC9E,gD,GA1CcvD,IAAMC,WCcVuD,E,YAdb,WAAYnE,GAAQ,IAAD,8BACjB,4CAAMA,KACDoE,QAAUnE,IAAOuC,KAAK,QAAQ,kBAAC,EAAD,MAAQ,kBAAC,EAAD,MAF1B,E,sEAMnB,OACE,6BACG/B,KAAK2D,a,GATMzD,IAAMC,WCQJyD,QACW,cAA7BjE,OAAOC,SAASiE,UAEe,UAA7BlE,OAAOC,SAASiE,UAEhBlE,OAAOC,SAASiE,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/B,MAAK,SAAAgC,GACJA,EAAaC,gBAEdhC,OAAM,SAAAlB,GACLmD,QAAQnD,MAAMA,EAAMG,c","file":"static/js/main.7b23bfc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login-avatar.fea535a0.png\";","import React from 'react';  \r\nimport cookie from 'react-cookies'; \r\n\r\n \r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props); \r\n  } \r\n  logout(){\r\n    cookie.remove('user', { path: '/' });\r\n    cookie.remove('game', { path: '/' });\r\n\r\n    window.location.reload();\r\n  }\r\n  render() {\r\n    return (\r\n     <div id='header'><h1>iGotchapp</h1><button id='logoutButton' onClick={this.logout}>Logout</button></div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';  \r\nimport Header from './Header';\r\nimport cookie from 'react-cookies'; \r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\n\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var gamecookie = cookie.load('mygame', { path: '/' });\r\n    gamecookie = gamecookie? gamecookie:{'name':'', 'id':''};\r\n    this.state = {feedback:'', rating: '', data:[], game:gamecookie, games:[]};\r\n  }\r\n  //----------------------------------------------------------------------\r\n   onChange = (e) => { \r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //-----------------------------------------------------------------------\r\n  rateForm = async (e) =>{\r\n     e.preventDefault();\r\n\r\n     try {\r\n      let res = await axios.post('/rate', {'rating': this.state.rating, 'feedback': this.state.feedback});         \r\n      if (res.data.error){\r\n        return alert(res.data.error);  \r\n      }\r\n      alert(res.data.success);\r\n      cookie.remove('mygame', { path: '/' });\r\n      window.location.reload();  \r\n    } catch (e) {\r\n      alert(\"System error occurred: \"+e.message);\r\n    }\r\n  }\r\n   //-----------------------------------------------------------------------\r\n   rateGame = (e) =>{\r\n    e.preventDefault();\r\n\r\n    try {\r\n       var i =  e.target.name.substring(1);\r\n       var game = this.state.data[i];\r\n       cookie.save('mygame',  game, { path: '/' });\r\n       window.location.reload();\r\n   } catch (e) {\r\n     alert(\"System error occurred: \"+e.message);\r\n   }\r\n } \r\n //-----------------------------------\r\n backToGames(){\r\n    cookie.remove('mygame', { path: '/' });\r\n    window.location.reload();\r\n }\r\n//-------------------------------------------------------------\r\n  dashboard(){\r\n      let userCookie =  JSON.parse(cookie.load('user').substring(2));\r\n       \r\n      if (userCookie.username == 'admin'){\r\n        if (this.state.games.length == 0)\r\n        axios.get('/ratings', {})\r\n        .then(res => this.setState({ games: res.data }))\r\n         .catch();       \r\n      return  (<div id='gameListHolder'><h2>All game ratings for the last week</h2>\r\n          <table>\r\n            <thead><tr><td>Game ID</td><td>Game Name</td><td>Rating</td></tr></thead>\r\n            <tbody>\r\n          {this.state.games.map((item, i) => {            \r\n            return (\r\n              <tr key={i}> \r\n                <td>{item.id}</td><td>{item.name}</td><td>{item.avgFB}</td>\r\n              </tr>\r\n            );\r\n            })}    \r\n            </tbody></table></div>); \r\n       \r\n      \r\n      }\r\n\r\n      if (!cookie.load('mygame')){\r\n        if (this.state.data.length == 0)\r\n        axios.get('/games', {})\r\n        .then(res => this.setState({ data: res.data }))\r\n         .catch();       \r\n      return  (<div id='gameListHolder'><h2>List of games to rate</h2>\r\n          <ul>\r\n          {this.state.data.map((item, i) => {\r\n            let formName = \"f\"+i;\r\n            if (!item.feedbackID)\r\n            return (\r\n              <li key={i}>\r\n              <form onSubmit={this.rateGame} name={formName}>\r\n                <input type='hidden' value={item.id} name='gameID'/>\r\n                <button >Rate {item.name}</button>\r\n              </form>\r\n              </li>\r\n            );\r\n    \r\n            return (<li key={i}>You rated  <b>{item.name}</b> with score {item.rating}</li>);\r\n            })}\r\n        </ul></div>);  \r\n      }       \r\n      \r\n      return (\r\n         <div id='rateGameDiv'>\r\n           <h2>Rate {this.state.game.name}</h2>\r\n           <form onSubmit = {this.rateForm} id='ratingForm'>\r\n             <label>Rating</label>\r\n                <select name='rating' onChange = {this.onChange}>\r\n                  <option value=''>Select rating</option>\r\n                  <option value='1'>1</option>\r\n                  <option value='2'>2</option>\r\n                  <option value='3'>3</option>\r\n                  <option value='4'>4</option>\r\n                  <option value='5'>5</option>\r\n                </select><br/>\r\n                <label>Feedback</label>\r\n                <input type='text'  onChange = {this.onChange} name='feedback' id='feedbackInput'/>  \r\n              <button>Rate Game</button>\r\n           </form>\r\n           <br/>\r\n           <button onClick={this.backToGames}><b>Back to game List</b></button>\r\n         </div>\r\n      )  \r\n  }\r\n  render() {\r\n    return (<div>\r\n                <Header/>\r\n                {this.dashboard()}\r\n            </div>);\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport avatar from './login-avatar.png';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Auth extends React.Component {\r\n  state = {'message':''};\r\n\r\n  constructor(props) {\r\n    super(props);   \r\n  }\r\n\r\n  mySubmitForm =  async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await axios.post('/login', this.state); \r\n            \r\n      if(!res.data.username){\r\n        this.setState({message: \"Username and password do not match!\"});\r\n        return false;\r\n      }  \r\n      window.location.reload();\r\n\r\n    } catch (e) {\r\n      alert(\"System error occurred: \"+e.message);\r\n    }\r\n};\r\n   \r\n//-----------------------------------------------------------------------\r\nonChange = (e) => { \r\n    this.setState({ [e.target.name]: e.target.value });\r\n }\r\n\r\nrender() { \r\n  return (\r\n    <div id='login-container'>\r\n      <div id='msgHolder'>{this.state.message}</div>  \r\n      <h2>iGotchApp Login</h2>\r\n     <form method=\"POST\" onSubmit={this.mySubmitForm} id='login-form'> \r\n     <div className=\"avatar-container\">\r\n        <img src={avatar} alt=\"Avatar\" className=\"avatar\"/>\r\n    </div>    \r\n     <label>Username</label>\r\n     <input type=\"text\" name=\"username\" onChange = {this.onChange} placeholder=\"Enter your username\"/>\r\n     <label>Password</label>\r\n     <input type=\"password\" name=\"password\" onChange = {this.onChange} placeholder=\"Enter your password\"/>\r\n     <button>Submit</button>\r\n    </form> \r\n    </div>\r\n  );\r\n }\r\n}\r\n\r\nexport default Auth;\r\n","import React from 'react';\nimport Home from './Home'; \nimport Auth from './Auth'; \nimport cookie from 'react-cookies'; \nclass App extends React.Component {\n  constructor(props) {\n    super(props);   \n    this.myroute = cookie.load('user')?<Home/>:<Auth/>;\n  }  \n         \nrender() { \n  return (\n    <div>\n      {this.myroute}\n    </div>\n  )\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}